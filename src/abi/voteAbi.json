{
    "abi": [
        {
            "type": "impl",
            "name": "VoteImpl",
            "interface_name": "vote::IVote"
        },
        {
            "type": "enum",
            "name": "core::bool",
            "variants": [
                {
                    "name": "False",
                    "type": "()"
                },
                {
                    "name": "True",
                    "type": "()"
                }
            ]
        },
        {
            "type": "interface",
            "name": "vote::IVote",
            "items": [
                {
                    "type": "function",
                    "name": "register_voter",
                    "inputs": [
                        {
                            "name": "voter",
                            "type": "core::starknet::contract_address::ContractAddress"
                        }
                    ],
                    "outputs": [],
                    "state_mutability": "external"
                },
                {
                    "type": "function",
                    "name": "vote",
                    "inputs": [
                        {
                            "name": "vote_choice",
                            "type": "core::integer::u8"
                        }
                    ],
                    "outputs": [],
                    "state_mutability": "external"
                },
                {
                    "type": "function",
                    "name": "get_vote_status",
                    "inputs": [],
                    "outputs": [
                        {
                            "type": "(core::integer::u32, core::integer::u32, core::integer::u32, core::integer::u32)"
                        }
                    ],
                    "state_mutability": "view"
                },
                {
                    "type": "function",
                    "name": "voter_can_vote",
                    "inputs": [
                        {
                            "name": "voter",
                            "type": "core::starknet::contract_address::ContractAddress"
                        }
                    ],
                    "outputs": [
                        {
                            "type": "core::bool"
                        }
                    ],
                    "state_mutability": "view"
                },
                {
                    "type": "function",
                    "name": "is_voter_registered",
                    "inputs": [
                        {
                            "name": "voter",
                            "type": "core::starknet::contract_address::ContractAddress"
                        }
                    ],
                    "outputs": [
                        {
                            "type": "core::bool"
                        }
                    ],
                    "state_mutability": "view"
                }
            ]
        },
        {
            "type": "event",
            "name": "vote::Vote::VoterRegistered",
            "kind": "struct",
            "members": [
                {
                    "name": "voter",
                    "type": "core::starknet::contract_address::ContractAddress",
                    "kind": "data"
                }
            ]
        },
        {
            "type": "event",
            "name": "vote::Vote::VoteCast",
            "kind": "struct",
            "members": [
                {
                    "name": "voter",
                    "type": "core::starknet::contract_address::ContractAddress",
                    "kind": "data"
                },
                {
                    "name": "choice",
                    "type": "core::integer::u8",
                    "kind": "data"
                }
            ]
        },
        {
            "type": "event",
            "name": "vote::Vote::Event",
            "kind": "enum",
            "variants": [
                {
                    "name": "VoterRegistered",
                    "type": "vote::Vote::VoterRegistered",
                    "kind": "nested"
                },
                {
                    "name": "VoteCast",
                    "type": "vote::Vote::VoteCast",
                    "kind": "nested"
                }
            ]
        }
    ]
}